plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group = 'motorcycle'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing', 'javafx.media']
}
application {
    mainClass = 'motorcycle.Main'
}

// Custom run tasks for different server configurations
task runNotificationOnly(type: JavaExec) {
    group = 'application'
    description = 'Runs the notification server only'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'motorcycle.Main'
    args '--notification-only'
}

task runRestOnly(type: JavaExec) {
    group = 'application'
    description = 'Runs the REST server only'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'motorcycle.Main'
    args '--rest-only'
}

task runApiClient(type: JavaExec) {
    group = 'application'
    description = 'Runs the RaceApiExample client'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'motorcycle.client.RaceApiExample'
}

dependencies {
    def javafxVersion = '21'
    def hibernateVersion = '6.4.4.Final'

    implementation "org.openjfx:javafx-controls:$javafxVersion"
    implementation "org.openjfx:javafx-fxml:$javafxVersion"
    implementation "org.openjfx:javafx-graphics:$javafxVersion"
    implementation "org.openjfx:javafx-base:$javafxVersion"

    // Hibernate
    implementation "org.hibernate.orm:hibernate-core:$hibernateVersion"
    implementation "org.hibernate.orm:hibernate-community-dialects:$hibernateVersion"
    implementation 'org.jboss.logging:jboss-logging:3.5.0.Final'
    implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.6.Final'

    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.3'

    // SQLite & Logging
    runtimeOnly 'org.xerial:sqlite-jdbc:3.42.0.0'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.12'

    implementation 'org.controlsfx:controlsfx:11.1.2'

    // JUnit
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // JAX-RS @Jersey
    implementation 'org.glassfish.jersey.core:jersey-server:3.1.3'
    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:3.1.3'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.3'
    implementation 'org.glassfish.jersey.containers:jersey-container-jdk-http:3.1.3'
    
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.3'
    
    // Add Jackson databind for ObjectMapper
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

}

test {
    useJUnitPlatform()
    enabled = false
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'motorcycle-app'
    }
}

jlinkZip {
    group = 'distribution'
}

